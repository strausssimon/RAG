
MUSHROOM CLASSIFICATION CNN - 5- CLASSES + RESIDUAL CONNECTIONS (TensorFlow 2.19.1 & Keras 3.x EXKLUSIV)
==========================================================================================

MUSHROOM CLASSIFICATION CNN - RESNET50 TRANSFER LEARNING (TensorFlow 2.19.1 & Keras 3.x EXKLUSIV)
====================================================================================================
Classes: Amanita_muscaria, Boletus_edulis, Armillaria_mellea, Phallus_impudicus, Cantharellus_cibarius
Architecture: ECHTES ResNet50 (ImageNet Pretrained) + Transfer Learning
Improvements: Fine-Tuning der letzten Layer, Dense-Top, Dropout, Adam Optimizer
Data: 80/20 split from data/randomized_mushrooms/inaturalist
Training: Randomized 200x200 images (80%)
Testing: Randomized 200x200 images (20%)
Output: Modern .keras format (with .h5 fallback for compatibility)
KERAS 3.x ERFORDERLICH - Keine Fallbacks!
====================================================================================================

Baue Transfer-Learning Modell mit ResNet50 (ImageNet)...
ResNet50-Transfermodell erstellt und kompiliert!

Starting training process with 80/20 split from randomized data...

Lade randomisierte Pilzdaten f√ºr 80/20 Train/Test Split...
Lade Daten aus: C:\Users\strau\OneDrive\Documents\Git\sml_main\SmallLanguageModels\data\resized_mushrooms\inaturalist
Konfigurierte Klassen: ['Phallus_impudicus', 'Amanita_muscaria', 'Boletus_edulis', 'Cantharellus_cibarius', 'Armillaria_mellea']
Anzahl Klassen: 5

1. Sammle alle Bilder aus allen Klassen...
   Phallus_impudicus: 1500 Dateien gefunden
   Amanita_muscaria: 1500 Dateien gefunden
   Boletus_edulis: 1500 Dateien gefunden
   Cantharellus_cibarius: 1500 Dateien gefunden
   Armillaria_mellea: 1500 Dateien gefunden

   Gesamt gesammelt: 7500 Dateien

2. Erstelle 80/20 Train/Test Split...
   Training: 6000 Dateien (80.0%)
   Test: 1500 Dateien (20.0%)

   Klassenverteilung im Training:
     Phallus_impudicus: 1200 Bilder
     Amanita_muscaria: 1200 Bilder
     Boletus_edulis: 1200 Bilder
     Cantharellus_cibarius: 1200 Bilder
     Armillaria_mellea: 1200 Bilder

   Klassenverteilung im Test:
     Phallus_impudicus: 300 Bilder
     Amanita_muscaria: 300 Bilder
     Boletus_edulis: 300 Bilder
     Cantharellus_cibarius: 300 Bilder
     Armillaria_mellea: 300 Bilder

3. Lade Bilddaten...
Loading training images:   0%|                                                                                                               | 0/6000 [00:00<?, ?it/s]Loading training images:   1%|#3                                                                                                   | 78/6000 [00:00<00:07, 773.55it/s]Loading training images:   3%|###                                                                                                 | 183/6000 [00:00<00:06, 928.98it/s]Loading training images:   5%|####8                                                                                               | 289/6000 [00:00<00:05, 981.42it/s]Loading training images:   7%|######7                                                                                            | 409/6000 [00:00<00:05, 1012.59it/s]Loading training images:   9%|########5                                                                                           | 511/6000 [00:00<00:05, 997.41it/s]Loading training images:  10%|##########1                                                                                         | 611/6000 [00:00<00:05, 994.50it/s]Loading training images:  12%|###########8                                                                                        | 711/6000 [00:00<00:05, 989.46it/s]Loading training images:  14%|#############5                                                                                      | 810/6000 [00:00<00:05, 960.65it/s]Loading training images:  15%|###############1                                                                                    | 907/6000 [00:00<00:05, 955.68it/s]Loading training images:  17%|################5                                                                                  | 1003/6000 [00:01<00:05, 924.84it/s]Loading training images:  18%|##################                                                                                 | 1096/6000 [00:01<00:05, 902.85it/s]Loading training images:  20%|###################7                                                                               | 1197/6000 [00:01<00:05, 906.20it/s]Loading training images:  22%|#####################3                                                                             | 1293/6000 [00:01<00:05, 920.89it/s]Loading training images:  23%|######################9                                                                            | 1388/6000 [00:01<00:04, 928.84it/s]Loading training images:  25%|########################4                                                                          | 1482/6000 [00:01<00:04, 931.92it/s]Loading training images:  26%|##########################                                                                         | 1579/6000 [00:01<00:04, 940.88it/s]Loading training images:  28%|###########################6                                                                       | 1676/6000 [00:01<00:04, 948.38it/s]Loading training images:  30%|#############################2                                                                     | 1772/6000 [00:01<00:04, 951.48it/s]Loading training images:  31%|##############################8                                                                    | 1868/6000 [00:01<00:04, 933.48it/s]Loading training images:  33%|################################3                                                                  | 1962/6000 [00:02<00:04, 925.02it/s]Loading training images:  34%|#################################9                                                                 | 2058/6000 [00:02<00:04, 922.00it/s]Loading training images:  36%|###################################5                                                               | 2153/6000 [00:02<00:04, 929.90it/s]Loading training images:  37%|#####################################1                                                             | 2249/6000 [00:02<00:03, 938.76it/s]Loading training images:  39%|######################################6                                                            | 2343/6000 [00:02<00:03, 938.77it/s]Loading training images:  41%|########################################2                                                          | 2437/6000 [00:02<00:03, 938.52it/s]Loading training images:  42%|#########################################7                                                         | 2532/6000 [00:02<00:03, 939.20it/s]Loading training images:  44%|###########################################3                                                       | 2626/6000 [00:02<00:03, 933.77it/s]Loading training images:  45%|############################################8                                                      | 2720/6000 [00:02<00:03, 921.77it/s]Loading training images:  47%|##############################################4                                                    | 2813/6000 [00:02<00:03, 918.07it/s]Loading training images:  48%|###############################################9                                                   | 2908/6000 [00:03<00:03, 927.35it/s]Loading training images:  50%|#################################################5                                                 | 3002/6000 [00:03<00:03, 930.51it/s]Loading training images:  52%|###################################################                                                | 3096/6000 [00:03<00:03, 923.66it/s]Loading training images:  53%|####################################################6                                              | 3189/6000 [00:03<00:03, 917.97it/s]Loading training images:  55%|######################################################1                                            | 3281/6000 [00:03<00:02, 918.23it/s]Loading training images:  56%|#######################################################7                                           | 3378/6000 [00:03<00:02, 933.45it/s]Loading training images:  58%|#########################################################2                                         | 3472/6000 [00:03<00:02, 933.16it/s]Loading training images:  60%|###########################################################                                        | 3578/6000 [00:03<00:02, 929.21it/s]Loading training images:  61%|############################################################6                                      | 3673/6000 [00:03<00:02, 934.96it/s]Loading training images:  63%|##############################################################1                                    | 3767/6000 [00:04<00:02, 933.09it/s]Loading training images:  64%|###############################################################7                                   | 3861/6000 [00:04<00:02, 931.52it/s]Loading training images:  66%|#################################################################2                                 | 3955/6000 [00:04<00:02, 894.05it/s]Loading training images:  67%|##################################################################7                                | 4045/6000 [00:04<00:02, 895.14it/s]Loading training images:  69%|####################################################################3                              | 4140/6000 [00:04<00:02, 909.27it/s]Loading training images:  71%|#####################################################################8                             | 4234/6000 [00:04<00:01, 915.23it/s]Loading training images:  72%|#######################################################################4                           | 4328/6000 [00:04<00:01, 922.37it/s]Loading training images:  74%|########################################################################9                          | 4421/6000 [00:04<00:01, 910.94it/s]Loading training images:  75%|##########################################################################4                        | 4513/6000 [00:04<00:01, 907.66it/s]Loading training images:  77%|###########################################################################9                       | 4604/6000 [00:04<00:01, 907.58it/s]Loading training images:  78%|#############################################################################5                     | 4698/6000 [00:05<00:01, 914.54it/s]Loading training images:  80%|###############################################################################                    | 4790/6000 [00:05<00:01, 910.64it/s]Loading training images:  81%|################################################################################5                  | 4882/6000 [00:05<00:01, 905.10it/s]Loading training images:  83%|##################################################################################                 | 4973/6000 [00:05<00:01, 903.91it/s]Loading training images:  84%|###################################################################################5               | 5064/6000 [00:05<00:01, 901.93it/s]Loading training images:  86%|#####################################################################################              | 5155/6000 [00:05<00:00, 904.16it/s]Loading training images:  87%|######################################################################################5            | 5246/6000 [00:05<00:00, 902.93it/s]Loading training images:  89%|########################################################################################2          | 5346/6000 [00:05<00:00, 892.67it/s]Loading training images:  91%|#########################################################################################6         | 5436/6000 [00:05<00:00, 891.63it/s]Loading training images:  92%|###########################################################################################2       | 5530/6000 [00:05<00:00, 904.82it/s]Loading training images:  94%|############################################################################################7      | 5621/6000 [00:06<00:00, 898.18it/s]Loading training images:  95%|##############################################################################################2    | 5711/6000 [00:06<00:00, 893.10it/s]Loading training images:  97%|###############################################################################################7   | 5801/6000 [00:06<00:00, 876.52it/s]Loading training images:  98%|#################################################################################################1 | 5890/6000 [00:06<00:00, 878.06it/s]Loading training images: 100%|##################################################################################################6| 5979/6000 [00:06<00:00, 880.70it/s]Loading training images: 100%|###################################################################################################| 6000/6000 [00:06<00:00, 921.28it/s]
Loading test images:   0%|                                                                                                                   | 0/1500 [00:00<?, ?it/s]Loading test images:   6%|######3                                                                                                  | 91/1500 [00:00<00:01, 907.83it/s]Loading test images:  12%|############6                                                                                           | 182/1500 [00:00<00:01, 852.79it/s]Loading test images:  18%|##################5                                                                                     | 268/1500 [00:00<00:01, 823.16it/s]Loading test images:  23%|########################4                                                                               | 352/1500 [00:00<00:01, 825.72it/s]Loading test images:  29%|##############################1                                                                         | 435/1500 [00:00<00:01, 824.51it/s]Loading test images:  35%|####################################                                                                    | 520/1500 [00:00<00:01, 829.58it/s]Loading test images:  41%|##########################################1                                                             | 608/1500 [00:00<00:01, 839.84it/s]Loading test images:  47%|#################################################                                                       | 707/1500 [00:00<00:00, 881.12it/s]Loading test images:  54%|#######################################################9                                                | 807/1500 [00:00<00:00, 914.71it/s]Loading test images:  61%|##############################################################9                                         | 908/1500 [00:01<00:00, 942.56it/s]Loading test images:  67%|#####################################################################2                                 | 1009/1500 [00:01<00:00, 960.28it/s]Loading test images:  74%|############################################################################1                          | 1109/1500 [00:01<00:00, 969.36it/s]Loading test images:  81%|###################################################################################                    | 1210/1500 [00:01<00:00, 981.04it/s]Loading test images:  87%|#########################################################################################8             | 1309/1500 [00:01<00:00, 981.92it/s]Loading test images:  94%|################################################################################################8      | 1411/1500 [00:01<00:00, 992.86it/s]Loading test images: 100%|#######################################################################################################| 1500/1500 [00:01<00:00, 924.25it/s]

=== FINALE STATISTIKEN ===
Training shape: (6000, 200, 200, 3)
Test shape: (1500, 200, 200, 3)
Klassengewichte: {0: np.float64(1.0), 1: np.float64(1.0), 2: np.float64(1.0), 3: np.float64(1.0), 4: np.float64(1.0)}

--- Verwende 80/20 Split aus data/randomized_mushrooms/inaturalist ---
Training: 6000 Bilder
Test: 1500 Bilder

Training for max 30 epochs...
Epoch 1/30
Traceback (most recent call last):
  File "c:\Users\strau\OneDrive\Documents\Git\sml_main\SmallLanguageModels\src\CNN\cnn_resnet.py", line 473, in <module>
    history = cnn.train(epochs=30)
              ^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\strau\OneDrive\Documents\Git\sml_main\SmallLanguageModels\src\CNN\cnn_resnet.py", line 369, in train
    history = self.model.fit(
              ^^^^^^^^^^^^^^^
  File "C:\Users\strau\AppData\Local\Programs\Python\Python312\Lib\site-packages\keras\src\utils\traceback_utils.py", line 117, in error_handler
    return fn(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^
  File "C:\Users\strau\AppData\Local\Programs\Python\Python312\Lib\site-packages\keras\src\backend\tensorflow\trainer.py", line 377, in fit
    logs = self.train_function(iterator)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\strau\AppData\Local\Programs\Python\Python312\Lib\site-packages\keras\src\backend\tensorflow\trainer.py", line 220, in function
    opt_outputs = multi_step_on_iterator(iterator)
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\strau\AppData\Local\Programs\Python\Python312\Lib\site-packages\tensorflow\python\util\traceback_utils.py", line 150, in error_handler
    return fn(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^
  File "C:\Users\strau\AppData\Local\Programs\Python\Python312\Lib\site-packages\tensorflow\python\eager\polymorphic_function\polymorphic_function.py", line 833, in __call__
    result = self._call(*args, **kwds)
             ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\strau\AppData\Local\Programs\Python\Python312\Lib\site-packages\tensorflow\python\eager\polymorphic_function\polymorphic_function.py", line 889, in _call
    self._initialize(args, kwds, add_initializers_to=initializers)
  File "C:\Users\strau\AppData\Local\Programs\Python\Python312\Lib\site-packages\tensorflow\python\eager\polymorphic_function\polymorphic_function.py", line 696, in _initialize
    self._concrete_variable_creation_fn = tracing_compilation.trace_function(
                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\strau\AppData\Local\Programs\Python\Python312\Lib\site-packages\tensorflow\python\eager\polymorphic_function\tracing_compilation.py", line 178, in trace_function
    concrete_function = _maybe_define_function(
                        ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\strau\AppData\Local\Programs\Python\Python312\Lib\site-packages\tensorflow\python\eager\polymorphic_function\tracing_compilation.py", line 283, in _maybe_define_function
    concrete_function = _create_concrete_function(
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\strau\AppData\Local\Programs\Python\Python312\Lib\site-packages\tensorflow\python\eager\polymorphic_function\tracing_compilation.py", line 310, in _create_concrete_function
    traced_func_graph = func_graph_module.func_graph_from_py_func(
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\strau\AppData\Local\Programs\Python\Python312\Lib\site-packages\tensorflow\python\framework\func_graph.py", line 1060, in func_graph_from_py_func
    func_outputs = python_func(*func_args, **func_kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\strau\AppData\Local\Programs\Python\Python312\Lib\site-packages\tensorflow\python\eager\polymorphic_function\polymorphic_function.py", line 599, in wrapped_fn
    out = weak_wrapped_fn().__wrapped__(*args, **kwds)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\strau\AppData\Local\Programs\Python\Python312\Lib\site-packages\tensorflow\python\eager\polymorphic_function\autograph_util.py", line 41, in autograph_handler
    return api.converted_call(
           ^^^^^^^^^^^^^^^^^^^
  File "C:\Users\strau\AppData\Local\Programs\Python\Python312\Lib\site-packages\tensorflow\python\autograph\impl\api.py", line 339, in converted_call
    return _call_unconverted(f, args, kwargs, options)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\strau\AppData\Local\Programs\Python\Python312\Lib\site-packages\tensorflow\python\autograph\impl\api.py", line 459, in _call_unconverted
    return f(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^
  File "C:\Users\strau\AppData\Local\Programs\Python\Python312\Lib\site-packages\tensorflow\python\autograph\impl\api.py", line 643, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\strau\AppData\Local\Programs\Python\Python312\Lib\site-packages\keras\src\backend\tensorflow\trainer.py", line 133, in multi_step_on_iterator
    one_step_on_data(iterator.get_next())
  File "C:\Users\strau\AppData\Local\Programs\Python\Python312\Lib\site-packages\tensorflow\python\util\traceback_utils.py", line 150, in error_handler
    return fn(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^
  File "C:\Users\strau\AppData\Local\Programs\Python\Python312\Lib\site-packages\tensorflow\python\eager\polymorphic_function\polymorphic_function.py", line 833, in __call__
    result = self._call(*args, **kwds)
             ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\strau\AppData\Local\Programs\Python\Python312\Lib\site-packages\tensorflow\python\eager\polymorphic_function\polymorphic_function.py", line 889, in _call
    self._initialize(args, kwds, add_initializers_to=initializers)
  File "C:\Users\strau\AppData\Local\Programs\Python\Python312\Lib\site-packages\tensorflow\python\eager\polymorphic_function\polymorphic_function.py", line 696, in _initialize
    self._concrete_variable_creation_fn = tracing_compilation.trace_function(
                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\strau\AppData\Local\Programs\Python\Python312\Lib\site-packages\tensorflow\python\eager\polymorphic_function\tracing_compilation.py", line 178, in trace_function
    concrete_function = _maybe_define_function(
                        ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\strau\AppData\Local\Programs\Python\Python312\Lib\site-packages\tensorflow\python\eager\polymorphic_function\tracing_compilation.py", line 283, in _maybe_define_function
    concrete_function = _create_concrete_function(
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\strau\AppData\Local\Programs\Python\Python312\Lib\site-packages\tensorflow\python\eager\polymorphic_function\tracing_compilation.py", line 310, in _create_concrete_function
    traced_func_graph = func_graph_module.func_graph_from_py_func(
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\strau\AppData\Local\Programs\Python\Python312\Lib\site-packages\tensorflow\python\framework\func_graph.py", line 1060, in func_graph_from_py_func
    func_outputs = python_func(*func_args, **func_kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\strau\AppData\Local\Programs\Python\Python312\Lib\site-packages\tensorflow\python\eager\polymorphic_function\polymorphic_function.py", line 599, in wrapped_fn
    out = weak_wrapped_fn().__wrapped__(*args, **kwds)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\strau\AppData\Local\Programs\Python\Python312\Lib\site-packages\tensorflow\python\eager\polymorphic_function\autograph_util.py", line 41, in autograph_handler
    return api.converted_call(
           ^^^^^^^^^^^^^^^^^^^
  File "C:\Users\strau\AppData\Local\Programs\Python\Python312\Lib\site-packages\tensorflow\python\autograph\impl\api.py", line 339, in converted_call
    return _call_unconverted(f, args, kwargs, options)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\strau\AppData\Local\Programs\Python\Python312\Lib\site-packages\tensorflow\python\autograph\impl\api.py", line 459, in _call_unconverted
    return f(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^
  File "C:\Users\strau\AppData\Local\Programs\Python\Python312\Lib\site-packages\tensorflow\python\autograph\impl\api.py", line 643, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\strau\AppData\Local\Programs\Python\Python312\Lib\site-packages\keras\src\backend\tensorflow\trainer.py", line 114, in one_step_on_data
    outputs = self.distribute_strategy.run(step_function, args=(data,))
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\strau\AppData\Local\Programs\Python\Python312\Lib\site-packages\tensorflow\python\distribute\distribute_lib.py", line 1673, in run
    return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\strau\AppData\Local\Programs\Python\Python312\Lib\site-packages\tensorflow\python\distribute\distribute_lib.py", line 3263, in call_for_each_replica
    return self._call_for_each_replica(fn, args, kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\strau\AppData\Local\Programs\Python\Python312\Lib\site-packages\tensorflow\python\distribute\distribute_lib.py", line 4061, in _call_for_each_replica
    return fn(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^
  File "C:\Users\strau\AppData\Local\Programs\Python\Python312\Lib\site-packages\tensorflow\python\autograph\impl\api.py", line 643, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\strau\AppData\Local\Programs\Python\Python312\Lib\site-packages\keras\src\backend\tensorflow\trainer.py", line 68, in train_step
    self._loss_tracker.update_state(
  File "C:\Users\strau\AppData\Local\Programs\Python\Python312\Lib\site-packages\keras\src\metrics\reduction_metrics.py", line 142, in update_state
    self.total.assign_add(ops.sum(values))
  File "C:\Users\strau\AppData\Local\Programs\Python\Python312\Lib\site-packages\keras\src\backend\common\variables.py", line 297, in assign_add
    return self.assign(self + value)
                       ~~~~~^~~~~~~
  File "C:\Users\strau\AppData\Local\Programs\Python\Python312\Lib\site-packages\keras\src\backend\common\variables.py", line 481, in __add__
    return backend.numpy.add(self.value, other)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\strau\AppData\Local\Programs\Python\Python312\Lib\site-packages\keras\src\backend\tensorflow\sparse.py", line 493, in sparse_wrapper
    return func(x1, x2)
           ^^^^^^^^^^^^
  File "C:\Users\strau\AppData\Local\Programs\Python\Python312\Lib\site-packages\keras\src\backend\tensorflow\numpy.py", line 131, in add
    return tf.add(x1, x2)
           ^^^^^^^^^^^^^^
  File "C:\Users\strau\AppData\Local\Programs\Python\Python312\Lib\site-packages\tensorflow\python\ops\weak_tensor_ops.py", line 142, in wrapper
    return op(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^
  File "C:\Users\strau\AppData\Local\Programs\Python\Python312\Lib\site-packages\tensorflow\python\util\traceback_utils.py", line 150, in error_handler
    return fn(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^
  File "C:\Users\strau\AppData\Local\Programs\Python\Python312\Lib\site-packages\tensorflow\python\util\dispatch.py", line 1260, in op_dispatch_handler
    return dispatch_target(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\strau\AppData\Local\Programs\Python\Python312\Lib\site-packages\tensorflow\python\ops\math_ops.py", line 3956, in add
    x = ops.convert_to_tensor(x, name="x")
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\strau\AppData\Local\Programs\Python\Python312\Lib\site-packages\tensorflow\python\profiler\trace.py", line 183, in wrapped
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\strau\AppData\Local\Programs\Python\Python312\Lib\site-packages\tensorflow\python\framework\ops.py", line 736, in convert_to_tensor
    return tensor_conversion_registry.convert(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\strau\AppData\Local\Programs\Python\Python312\Lib\site-packages\tensorflow\python\framework\tensor_conversion_registry.py", line 234, in convert
    ret = conversion_func(value, dtype=dtype, name=name, as_ref=as_ref)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\strau\AppData\Local\Programs\Python\Python312\Lib\site-packages\tensorflow\python\ops\resource_variable_ops.py", line 2378, in _dense_var_to_tensor
    return var._dense_var_to_tensor(dtype=dtype, name=name, as_ref=as_ref)  # pylint: disable=protected-access
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\strau\AppData\Local\Programs\Python\Python312\Lib\site-packages\tensorflow\python\ops\resource_variable_ops.py", line 1624, in _dense_var_to_tensor
    return self.value()
           ^^^^^^^^^^^^
  File "C:\Users\strau\AppData\Local\Programs\Python\Python312\Lib\site-packages\tensorflow\python\ops\resource_variable_ops.py", line 658, in value
    return self._read_variable_op()
           ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\strau\AppData\Local\Programs\Python\Python312\Lib\site-packages\tensorflow\python\ops\resource_variable_ops.py", line 843, in _read_variable_op
    result = read_and_set_handle(no_copy)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\strau\AppData\Local\Programs\Python\Python312\Lib\site-packages\tensorflow\python\ops\resource_variable_ops.py", line 835, in read_and_set_handle
    _maybe_set_handle_data(self._dtype, self.handle, result)
  File "C:\Users\strau\AppData\Local\Programs\Python\Python312\Lib\site-packages\tensorflow\python\ops\resource_variable_ops.py", line 322, in _maybe_set_handle_data
    if dtype == dtypes.variant:
       ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\strau\AppData\Local\Programs\Python\Python312\Lib\site-packages\tensorflow\python\framework\dtypes.py", line 264, in __eq__
    def __eq__(self, other):
  
KeyboardInterrupt
